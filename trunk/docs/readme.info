This is readme.info, produced by makeinfo version 5.2 from readme.texi.

START-INFO-DIR-ENTRY
* CGUI: (CGUI). Readme file for CGUI
END-INFO-DIR-ENTRY

This is the Info version of the CGUI readme file.

By Christer Sandberg


File: readme.info,  Node: Top,  Prev: (dir),  Up: (dir)

A C Graphical User Interface [add on to Allegro] by Christer Sandberg
Email: rya.christer@gmail.com Homepage: http://cgui.sourceforge.net/ The
CGUI Readme File

 2.0.5

* Menu:

* Introduction::            Introduction
* Requirements::            Requirements
* Installation::            Installation
* MSys::                    MSys
* Usage::                   Usage
* Contact Info::            Contact Info


File: readme.info,  Node: Introduction,  Next: Requirements,  Up: Top

1 Introduction
**************

CGUI is a Graphical User Interface library.  It contains functions that
you can use to create windows with buttons, lists, edit boxes etc.  Read
the documentation (you find it in the docs directory of cgui) for
details.  The docs will be built in several formats when you build the
library (see below)

CGUI compiles on the following platforms: DOS/DJGPP, Linux, Cygwin, Mac
OS X Windows/Mingw32, and Windows/MSVC.


File: readme.info,  Node: Requirements,  Next: Installation,  Prev: Introduction,  Up: Top

2 Requirements
**************

You need to have compiled and installed Allegro version 4.4.2 before
building CGUI. Please note: compiled.  Verify that Allegro is correctly
build by running the program exhello in Allegro's example directory.
There are also other requirements like correctly installed compilers
etc.  but these are already fulfilled if you succeded in the above.
You can find Allegro at: http://alleg.sourceforge.net/


File: readme.info,  Node: Installation,  Next: MSys,  Prev: Requirements,  Up: Top

3 Installation
**************

Installation goes in the following simple steps, and should be familiar
since it is exactly the same way as you used when installing Allegro:

   * Start a konsole (a DOS-box in Windows)
   * Make your cgui directory to the current (e.g.  cd ~/cgui or cd
     c:\cgui etc)
   * Tell the installation process what platform you use.  This is done
     by running one of the following at the command line:

          To compile with Linux            ./fix.sh unix
          To compile with Cygwin           fix.sh cygwin
          To compile with DOS/DJGPP:       fix.bat djgpp
          To compile with Mac OS X:        ./fix.sh mac
          To compile with Windows/MinGW32: fix.bat mingw32
          To compile with Windows/MSVC:    fix.bat msvc

   * For MSVC users only:
     Set up your environment so that MSVC can be used from the
     commandline.  You probably have a vcvars32.bat file that will do
     this for you.  (Under Windows NT and Windows 2000, you will have to
     run this file every time you open a DOS box, or configure the
     environment variables in Control Panel/System/Environment.)
   * Compile the library.  This is done by running
          make

     at the command line.
   * Install the files to common directories.  This is done by running

          make install

     at the command line.  Under Linux and Mac OS X you must be root to
     do that.
     Under Linux, you may want to instead run "make install
     SYSTEM_DIR=<dir>", which will cause headers to be installed to
     <dir>/include and libraries to <dir>/lib.  (default for <dir> is
     /usr/local)

That's it!  You may also want to perform some of the optional steps:

   * You can compile a debugging library by typing "make DEBUGMODE=1".
     To compile both the usual and the debug library in one step, type
     "make all".
   * To use the debugging library with your program, replace cgui with
     cguid in the library specification to the build procedure of your
     program.
   * If you use Rhide and want to read the CGUI documentation with the
     Rhide online help system, go to the "Help / Syntax help / Files to
     search" menu, and add "cgui" after the existing "libc" entry
     (separated by a space).
   * If you use the default build there will be built and installed a
     dynamic library.  If you want statically linked libraries under
     Unix or Windows as well as the default dynamically linked libraries
     (dll under Windows, .so under Unix), set the environment variable
     "STATICLINK=1", and repeat the "make install" and if you want a
     debug build "make install DEBUGMODE=1".  These static libraries
     require the statically linked version of Allegro.
     If you use the static library your own program using it will
     contain everything, but the executable file will be larger.  If you
     use the dynamic library your program will be quite small, but on
     the other hand you also need to append both the dynamic CGUI
     library and the dynamic library of Allegro when you distribute yur
     program to other people.


File: readme.info,  Node: MSys,  Next: Usage,  Prev: Installation,  Up: Top

4 MSys
******

Users of the MSys environment should use the mingw32 port of CGUI and
need to set the environment variable UNIX_TOOLS=1 before make install is
run.


File: readme.info,  Node: Usage,  Next: Contact Info,  Prev: MSys,  Up: Top

5 Usage
*******

Read the documentation (e.g.  cgui.html) section Usage about how to
build your own program using CGUI.
Run some of the examples and look at the code to get hints how to use
CGUI. Read the documentation to learn more and to see details how it
works.


File: readme.info,  Node: Contact Info,  Prev: Usage,  Up: Top

6 Contact Info
**************

Email:
   * rya.christer@gmail.com

Homepage:
   * http://cgui.sourceforge.net/

Telephone:
   * +46.(0)34032266



Tag Table:
Node: Top224
Node: Introduction694
Node: Requirements1214
Node: Installation1742
Node: MSys4938
Node: Usage5181
Node: Contact Info5527

End Tag Table
